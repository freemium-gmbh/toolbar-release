<Window x:Class="RegistryCleaner.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:WinCtr="clr-namespace:RegistryCleaner"
		xmlns:winForms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
		xmlns:properties="clr-namespace:RegistryCleaner.Properties"
		xmlns:routine="clr-namespace:RegistryCleaner.Routine"
		xmlns:models="clr-namespace:RegistryCleaner.Models"
		xmlns:s="clr-namespace:System;assembly=mscorlib"
		Title="{x:Static Member=properties:Resources.RegistryCleaner}"
		Height="604"
		Width="850"
		Loaded="Window_Loaded"
		ResizeMode="NoResize"
		Background="#FFF0F0F0"
		WindowStartupLocation="CenterScreen"
		Icon="/RegistryCleaner;component/Images/FSUIcon.ico">
	<Window.Resources>

		<Style x:Key="CollapsedHeaderStyle"
			   TargetType="{x:Type GridViewColumnHeader}">
			<Setter Property="Visibility"
					Value="Collapsed" />
		</Style>

		<routine:StatusEqualityToVisibilityConverter x:Key="StatusEqualityToVisibilityConverter" />
		<routine:StatusEqualityToBooleanConverter x:Key="StatusEqualityToBooleanConverter" />

		<!--
			ListView styles
		-->

		<LinearGradientBrush x:Key="NormalBrush"
							 StartPoint="0,0"
							 EndPoint="0,1">
			<GradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#FFF"
								  Offset="0.0" />
					<GradientStop Color="#CCC"
								  Offset="1.0" />
				</GradientStopCollection>
			</GradientBrush.GradientStops>
		</LinearGradientBrush>

		<LinearGradientBrush x:Key="PressedBrush"
							 StartPoint="0,0"
							 EndPoint="0,1">
			<GradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#BBB"
								  Offset="0.0" />
					<GradientStop Color="#EEE"
								  Offset="0.1" />
					<GradientStop Color="#EEE"
								  Offset="0.9" />
					<GradientStop Color="#FFF"
								  Offset="1.0" />
				</GradientStopCollection>
			</GradientBrush.GradientStops>
		</LinearGradientBrush>

		<LinearGradientBrush x:Key="NormalBorderBrush"
							 StartPoint="0,0"
							 EndPoint="0,20"
							 MappingMode="Absolute">
			<LinearGradientBrush.GradientStops>
				<GradientStop Color="#FFABADB3"
							  Offset="0.05" />
				<GradientStop Color="#FFE2E3EA"
							  Offset="0.07" />
				<GradientStop Color="#FFE3E9EF"
							  Offset="1" />
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>

		<LinearGradientBrush x:Key="LightBrush"
							 StartPoint="0,0"
							 EndPoint="0,1">
			<GradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#FFF"
								  Offset="0.0" />
					<GradientStop Color="#EEE"
								  Offset="1.0" />
				</GradientStopCollection>
			</GradientBrush.GradientStops>
		</LinearGradientBrush>

		<Style x:Key="ListViewItemContainerStyle"
			   TargetType="{x:Type ListViewItem}">
			<Setter Property="HorizontalContentAlignment"
					Value="Left" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="Foreground"
					Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="Margin"
					Value="0,0,0,0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListViewItem}">
						<Border x:Name="Bd"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="true"
								BorderThickness="0"
								BorderBrush="#6FBDE8">
							<GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Selector.IsSelected">
								<Setter Property="Panel.Background"
										TargetName="Bd">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
									</Setter.Value>
								</Setter>
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
									</Setter.Value>
								</Setter>
								<Trigger.Value>
									<s:Boolean>True</s:Boolean>
								</Trigger.Value>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelected">
										<Condition.Value>
											<s:Boolean>True</s:Boolean>
										</Condition.Value>
									</Condition>
									<Condition Property="Selector.IsSelectionActive">
										<Condition.Value>
											<s:Boolean>False</s:Boolean>
										</Condition.Value>
									</Condition>
								</MultiTrigger.Conditions>
								<Setter Property="Panel.Background"
										TargetName="Bd">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
									</Setter.Value>
								</Setter>
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
									</Setter.Value>
								</Setter>
							</MultiTrigger>
							<Trigger Property="UIElement.IsEnabled">
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
									</Setter.Value>
								</Setter>
								<Trigger.Value>
									<s:Boolean>False</s:Boolean>
								</Trigger.Value>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="GridViewColumnHeaderGripper"
			   TargetType="Thumb">
			<Setter Property="Width"
					Value="18" />
			<Setter Property="Background"
					Value="{StaticResource NormalBorderBrush}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Padding="{TemplateBinding Padding}"
								Background="Transparent">
							<Rectangle HorizontalAlignment="Center"
									   Width="1"
									   Fill="{TemplateBinding Background}" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="{x:Type GridViewColumnHeader}"
			   TargetType="GridViewColumnHeader">
			<Setter Property="HorizontalContentAlignment"
					Value="Center" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="Foreground"
					Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="GridViewColumnHeader">
						<Grid>
							<Border Name="HeaderBorder"
									BorderThickness="0,1,0,1"
									BorderBrush="{StaticResource NormalBorderBrush}"
									Background="{StaticResource LightBrush}"
									Padding="2,2,2,2">
								<ContentPresenter Name="HeaderContent"
												  Margin="0,0,0,1"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  RecognizesAccessKey="True"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<Thumb x:Name="PART_HeaderGripper"
								   HorizontalAlignment="Right"
								   Margin="0,0,-9,0"
								   Style="{StaticResource GridViewColumnHeaderGripper}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="true">
								<Setter TargetName="HeaderBorder"
										Property="Background"
										Value="{StaticResource NormalBrush}" />
							</Trigger>
							<Trigger Property="IsPressed"
									 Value="true">
								<Setter TargetName="HeaderBorder"
										Property="Background"
										Value="{StaticResource PressedBrush}" />
								<Setter TargetName="HeaderContent"
										Property="Margin"
										Value="1,1,0,0" />
							</Trigger>
							<Trigger Property="IsEnabled"
									 Value="false">
								<Setter Property="Foreground"
										Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Role"
						 Value="Floating">
					<Setter Property="Opacity"
							Value="0.7" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="GridViewColumnHeader">
								<Canvas Name="PART_FloatingHeaderCanvas">
									<Rectangle Fill="#60000000"
											   Width="{TemplateBinding ActualWidth}"
											   Height="{TemplateBinding ActualHeight}" />
								</Canvas>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="Role"
						 Value="Padding">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="GridViewColumnHeader">
								<Border Name="HeaderBorder"
										BorderThickness="0,1,0,1"
										BorderBrush="{StaticResource NormalBorderBrush}"
										Background="{StaticResource LightBrush}" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
			   TargetType="ScrollViewer">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ScrollViewer">
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<DockPanel Margin="{TemplateBinding Padding}">
								<ScrollViewer DockPanel.Dock="Top"
											  HorizontalScrollBarVisibility="Hidden"
											  VerticalScrollBarVisibility="Hidden"
											  Focusable="false">
									<GridViewHeaderRowPresenter Margin="0,0,0,0"
																Columns="{Binding Path=TemplatedParent.View.Columns,
											RelativeSource={RelativeSource TemplatedParent}}"
																ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
																ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
																ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
																AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
																ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
																ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
																SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</ScrollViewer>
								<ScrollContentPresenter Name="PART_ScrollContentPresenter"
														KeyboardNavigation.DirectionalNavigation="Local"
														CanContentScroll="True"
														CanHorizontallyScroll="False"
														CanVerticallyScroll="False" />
							</DockPanel>
							<ScrollBar Name="PART_HorizontalScrollBar"
									   Orientation="Horizontal"
									   Grid.Row="1"
									   Maximum="{TemplateBinding ScrollableWidth}"
									   ViewportSize="{TemplateBinding ViewportWidth}"
									   Value="{TemplateBinding HorizontalOffset}"
									   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
							<ScrollBar Name="PART_VerticalScrollBar"
									   Grid.Column="1"
									   Maximum="{TemplateBinding ScrollableHeight}"
									   ViewportSize="{TemplateBinding ViewportHeight}"
									   Value="{TemplateBinding VerticalOffset}"
									   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="{x:Type ListView}"
			   TargetType="ListView">
			<Setter Property="SnapsToDevicePixels"
					Value="true" />
			<Setter Property="OverridesDefaultStyle"
					Value="true" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
					Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
					Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll"
					Value="true" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListView">
						<Border Name="Border"
								BorderThickness="0"
								BorderBrush="#999999"
								Background="#FFFFFF">
							<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsGrouping"
									 Value="true">
								<Setter Property="ScrollViewer.CanContentScroll"
										Value="false" />
							</Trigger>
							<Trigger Property="IsEnabled"
									 Value="false">
								<Setter TargetName="Border"
										Property="Background"
										Value="#F5F5F5" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--
			/ListView styles
		-->

	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="64" />
			<RowDefinition Height="61"></RowDefinition>
			<RowDefinition />
			<RowDefinition Height="31" />
		</Grid.RowDefinitions>

		<WindowsFormsHost  Height="64"
						   Width="Auto">
			<WinCtr:TopControl x:Name="header"
							   Text="{x:Static Member=properties:Resources.RegistryCleaner}" />
		</WindowsFormsHost>

		<!--
			Header for not started state
		-->
		<Border Height="61"
				BorderThickness="0 0 0 1"
				BorderBrush="#AFC5E9"
				Grid.Row="1"
				Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.NotStarted}}">
			<StackPanel Height="60">
				<StackPanel.Background>
					<LinearGradientBrush EndPoint="0.5,1"
										 StartPoint="0.5,0">
						<GradientStop Color="#F6F9FE"
									  Offset="0" />
						<GradientStop Color="#E2EDFE"
									  Offset="1" />
					</LinearGradientBrush>
				</StackPanel.Background>
				<TextBlock Text="{Binding HeaderTitle}"
						   Padding="15 10 0 5"
						   Foreground="#005D74"
						   FontWeight="Bold"
						   FontSize="13" />
				<StackPanel Orientation="Horizontal" Margin="15 0 0 0">
					<Image x:Name="imageNotStarted" Width="16" Height="16"></Image>
					<TextBlock Text="{Binding HeaderSubTitle}"
						   Padding="5 0 0 0"
						   Foreground="#7A7A7A" />
				</StackPanel>
			</StackPanel>
		</Border>

		<!--
			Header for started state
		-->
		<Border Height="61"
				BorderThickness="0 0 0 1"
				BorderBrush="#AFC5E9"
				Grid.Row="1"
				Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.Started}}">
			<StackPanel Height="60">
				<StackPanel.Background>
					<LinearGradientBrush EndPoint="0.5,1"
										 StartPoint="0.5,0">
						<GradientStop Color="#F6F9FE"
									  Offset="0" />
						<GradientStop Color="#E2EDFE"
									  Offset="1" />
					</LinearGradientBrush>
				</StackPanel.Background>
				<TextBlock Text="{Binding HeaderTitle}"
						   Padding="15 10 0 5"
						   Foreground="#005D74"
						   FontWeight="Bold"
						   FontSize="13" />
				<StackPanel Orientation="Horizontal"
							Margin="15 0 0 0">
					<WindowsFormsHost  Height="16"
									   Width="16">
						<winForms:PictureBox x:Name="pictureBoxLoading"
											 BackColor="Transparent" />
					</WindowsFormsHost>
					<TextBlock Padding="5 0 0 0"
							   Text="{Binding HeaderSubTitle}"
							   Foreground="#7A7A7A" />
				</StackPanel>
			</StackPanel>
		</Border>

		<!--
			Header for canceled state
		-->
		<Border Height="61"
				BorderThickness="0 0 0 1"
				BorderBrush="#E9AFAF"
				Grid.Row="1"
				Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.Canceled}}">
			<StackPanel Height="60">
				<StackPanel.Background>
					<LinearGradientBrush EndPoint="0.5,1"
										 StartPoint="0.5,0">
						<GradientStop Color="#FEF6FC"
									  Offset="0" />
						<GradientStop Color="#FEE2E2"
									  Offset="1" />
					</LinearGradientBrush>
				</StackPanel.Background>
				<TextBlock Text="{Binding HeaderTitle}"
						   Padding="15 10 0 5"
						   Foreground="#B11506"
						   FontWeight="Bold"
						   FontSize="13" />
				<StackPanel Orientation="Horizontal" Margin="15 0 0 0">
					<Image Source="/RegistryCleaner;component/Images/scan_cancelled.png" Width="16" Height="16"></Image>
					<TextBlock Text="{Binding HeaderSubTitle}"
						   Padding="5 0 0 0"
						   Foreground="#7A7A7A" />
				</StackPanel>
			</StackPanel>
		</Border>

		<!--
			Header for scan finished state
		-->
		<Border Height="61"
				BorderThickness="0 0 0 1"
				BorderBrush="#E9D6AF"
				Grid.Row="1"
				Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.ScanFinished}}">
			<StackPanel Height="60">
				<StackPanel.Background>
					<LinearGradientBrush EndPoint="0.5,1"
										 StartPoint="0.5,0">
						<GradientStop Color="#FEFBF6"
									  Offset="0" />
						<GradientStop Color="#FEF5E2"
									  Offset="1" />
					</LinearGradientBrush>
				</StackPanel.Background>
				<TextBlock Text="{Binding HeaderTitle}"
						   Padding="15 10 0 5"
						   FontWeight="Bold"
						   Foreground="#B18806"
						   FontSize="13" />
				<StackPanel Orientation="Horizontal" Margin="15 0 0 0">
					<Image Source="/RegistryCleaner;component/Images/scan_done.png" Width="16" Height="16"></Image>
					<TextBlock Text="{Binding HeaderSubTitle}"
						   Padding="5 0 0 0"
						   Foreground="#7A7A7A" />
				</StackPanel>
			</StackPanel>
		</Border>

		<!--
			Header for cleaning finished state
		-->
		<Border Height="61"
				BorderThickness="0 0 0 1"
				BorderBrush="#AFE9C0"
				Grid.Row="1"
				Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.CleaningFinished}}">
			<StackPanel Height="60">
				<StackPanel.Background>
					<LinearGradientBrush EndPoint="0.5,1"
										 StartPoint="0.5,0">
						<GradientStop Color="#F6FEF8"
									  Offset="0" />
						<GradientStop Color="#E2FEEA"
									  Offset="1" />
					</LinearGradientBrush>
				</StackPanel.Background>
				<TextBlock Text="{Binding HeaderTitle}"
						   Padding="15 10 0 5"
						   Foreground="#06B147"
						   FontWeight="Bold"
						   FontSize="13" />
				<StackPanel Orientation="Horizontal" Margin="15 0 0 0">
					<Image Source="/RegistryCleaner;component/Images/cleaning_done.png" Width="16" Height="16"></Image>
					<TextBlock Text="{Binding HeaderSubTitle}"
						   Padding="5 0 0 0"
						   Foreground="#7A7A7A" />
				</StackPanel>
			</StackPanel>
		</Border>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="230" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<Border BorderBrush="#CECECE"
					BorderThickness="0 0 1 0">
				<ListView ItemsSource="{Binding RegistryCategories}"
						  ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
						  SelectionMode="Single"
						  FocusVisualStyle="{x:Null}"
						  BorderThickness="0"
						  routine:GridViewSort.AutoSort="True"
						  IsEnabled="{Binding Path=Status, Converter={StaticResource StatusEqualityToBooleanConverter}, ConverterParameter={x:Static models:OperationStatus.Started}}">
					<ListView.View>
						<GridView AllowsColumnReorder="False">
							<GridView.Columns>
								<GridViewColumn Width="220"
												routine:GridViewSort.PropertyName="Title">
									<GridViewColumnHeader HorizontalContentAlignment="Left">
										<StackPanel Orientation="Horizontal">
											<CheckBox Margin="4,2,5,0"
													  IsChecked="{Binding DataContext.AllCategoriesChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=TwoWay}"
													  Click="AllCategoriesClick" />
											<TextBlock Text="{x:Static Member=properties:Resources.AllCategories}" />
										</StackPanel>
									</GridViewColumnHeader>
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal"
														Height="23"
														VerticalAlignment="Top">
												<CheckBox Margin="0,4,0,0"
														  IsChecked="{Binding IsChecked, Mode=TwoWay}"
														  Click="CategoryClick"
														  ClipToBounds="True"
														  VerticalAlignment="Top">
													<Image Source="{Binding Image}"
														   Stretch="None"
														   Margin="0 0 5 0" />
												</CheckBox>
												<TextBlock Text="{Binding Title}"
														   VerticalAlignment="Center">
												</TextBlock>
												<TextBlock Text="{Binding ItemsCount}"
														   VerticalAlignment="Center"
														   Margin="5 0 0 0" />
											</StackPanel>
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView.Columns>
						</GridView>
					</ListView.View>
				</ListView>
			</Border>

			<Grid Grid.Column="1">
				<Grid.RowDefinitions>
					<RowDefinition></RowDefinition>
					<RowDefinition Height="46"></RowDefinition>
				</Grid.RowDefinitions>

				<ListView ItemsSource="{Binding RegistrySubCategories}"
						  ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
						  FocusVisualStyle="{x:Null}"
						  BorderThickness="0"
						  routine:GridViewSort.AutoSort="True">
					<ListView.View>
						<GridView AllowsColumnReorder="False">
							<GridView.Columns>
								<GridViewColumn Width="26">
									<GridViewColumnHeader HorizontalContentAlignment="Left">
										<CheckBox Margin="4,2,0,0"
												  IsChecked="{Binding DataContext.AllSubcategoriesChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=TwoWay}"
												  Click="AllSubcategoriesClick" />
									</GridViewColumnHeader>
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<CheckBox Margin="0,5,0,0"
													  Height="18"
													  IsChecked="{Binding Check, Mode=TwoWay}"
													  Click="SubcategoryClick"
													  VerticalAlignment="Top"
													  HorizontalAlignment="Left" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Width="50"
												routine:GridViewSort.PropertyName="Root">
									<GridViewColumn.Header>
										<TextBlock Text="{x:Static Member=properties:Resources.Root}" />
									</GridViewColumn.Header>
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="0,2,0,0"
													   Height="18"
													   Text="{Binding AbbreviatedRoot}"
													   VerticalAlignment="Top" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Width="280"
												routine:GridViewSort.PropertyName="Key">
									<GridViewColumn.Header>
										<TextBlock Text="{x:Static Member=properties:Resources.Key}" />
									</GridViewColumn.Header>
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="0,2,0,0"
													   Height="18"
													   Text="{Binding Key}"
													   VerticalAlignment="Top" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Width="160"
												routine:GridViewSort.PropertyName="Data">
									<GridViewColumn.Header>
										<TextBlock Text="{x:Static Member=properties:Resources.Data}" />
									</GridViewColumn.Header>
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="0,2,0,0"
													   Height="18"
													   Text="{Binding Data}"
													   VerticalAlignment="Top" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Width="130"
												routine:GridViewSort.PropertyName="Name">
									<GridViewColumn.Header>
										<TextBlock Text="{x:Static Member=properties:Resources.Type}" />
									</GridViewColumn.Header>
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="0,2,0,0"
													   Height="18"
													   Text="{Binding Name}"
													   VerticalAlignment="Top" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView.Columns>
						</GridView>
					</ListView.View>
				</ListView>

				<!--
					Footer for not started state
				-->
				<StackPanel Grid.Row="1"
							Orientation="Horizontal"
							HorizontalAlignment="Right"
							Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.NotStarted}}">
					<Button Click="StartScan"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.ScanNow}"
							Margin="10,10,5,10"
							Padding="25,1" />
					<Button Click="StartClearing"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.StartClearing}"
							Margin="10,10,5,10"
							Padding="25,1"
							IsEnabled="False" />
				</StackPanel>

				<!--
					Footer for started state
				-->
				<DockPanel Grid.Row="1"
							HorizontalAlignment="Stretch"
							Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.Started}}" Margin="0">

					<StackPanel HorizontalAlignment="Left" Margin="10 0 0 0">
						<StackPanel Orientation="Horizontal"
									Margin="0 5 0 3">
							<TextBlock Text="{x:Static Member=properties:Resources.Scanning}"
									   Padding="0 0 5 0"
									   Foreground="#7A7A7A"></TextBlock>
							<TextBlock Text="{Binding ScanningTitle}"
									   Foreground="#7A7A7A"></TextBlock>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<ProgressBar Name="MainProgressBar"
										 Margin="0 0 10 0"
										 Height="12"
										 Width="230"></ProgressBar>
							<TextBlock Name="MainProgressBarText"
									   Width="30"
									   Foreground="#7A7A7A"
									   VerticalAlignment="Top"
									   Margin="0,-2,0,0"></TextBlock>
						</StackPanel>
					</StackPanel>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Click="CancelScan"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.CancelScan}"
							Margin="10,10,5,10"
							Padding="25,1" />
						<Button Click="StartClearing"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.StartClearing}"
							Margin="10,10,5,10"
							Padding="25,1"
							IsEnabled="False" />
					</StackPanel>
				</DockPanel>

				<!--
					Footer for canceled state
				-->
				<StackPanel Grid.Row="1"
							Orientation="Horizontal"
							HorizontalAlignment="Right"
							Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.Canceled}}">
					<Button Click="StartScan"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.ScanAgain}"
							Margin="10,10,5,10"
							Padding="25,1" />
					<Button Click="StartClearing"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.StartClearing}"
							Margin="10,10,5,10"
							Padding="25,1" />
				</StackPanel>

				<!--
					Footer for scan finished state
				-->
				<StackPanel Grid.Row="1"
							Orientation="Horizontal"
							HorizontalAlignment="Right"
							Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.ScanFinished}}">
					<Button Click="StartScan"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.ScanAgain}"
							Margin="10,10,5,10"
							Padding="25,1" />
					<Button Click="StartClearing"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.StartClearing}"
							Margin="10,10,5,10"
							Padding="25,1" />
				</StackPanel>

				<!--
					Footer for cleaning finished state
				-->
				<StackPanel Grid.Row="1"
							Orientation="Horizontal"
							HorizontalAlignment="Right"
							Visibility="{Binding Path=Status, Converter={StaticResource StatusEqualityToVisibilityConverter}, ConverterParameter={x:Static models:OperationStatus.CleaningFinished}}">
					<Button Click="Finish"
							HorizontalAlignment="Right"
							Content="{x:Static Member=properties:Resources.Finish}"
							Margin="10,10,5,10"
							Padding="25,1" />
				</StackPanel>

			</Grid>
		</Grid>

		<WindowsFormsHost Grid.Row="3"
						  Height="31"
						  Width="auto">
			<WinCtr:BottomControl x:Name="footer" />
		</WindowsFormsHost>

	</Grid>
</Window>
