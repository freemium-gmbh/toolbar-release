<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="auto_encrypt_created" xml:space="preserve">
    <value>L'eseguibile per la codifica automatica è stato creato</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Sfoglia</value>
  </data>
  <data name="cannot_be_encrypted" xml:space="preserve">
    <value>Impossibile codificare il file; seguire le istruzioni corrette per effettuare la codifica</value>
  </data>
  <data name="cannot_create" xml:space="preserve">
    <value>Impossibile creare uno strumento di decodifica eseguibile</value>
  </data>
  <data name="cannot_find" xml:space="preserve">
    <value>Impossibile trovare</value>
  </data>
  <data name="confirmed_pass" xml:space="preserve">
    <value>Password confermata</value>
  </data>
  <data name="confirm_pass" xml:space="preserve">
    <value>Conferma password</value>
  </data>
  <data name="create_auto_file" xml:space="preserve">
    <value>Crea un file EXE per la codifica automatica</value>
  </data>
  <data name="decrypt" xml:space="preserve">
    <value>Decodifica</value>
  </data>
  <data name="decrypted_succ" xml:space="preserve">
    <value>File decodificato con successo</value>
  </data>
  <data name="decryption" xml:space="preserve">
    <value>Decodifica</value>
  </data>
  <data name="delete_encrypt_decrypt" xml:space="preserve">
    <value>Elimina il file codificato dopo la decodifica</value>
  </data>
  <data name="del_after_decryption" xml:space="preserve">
    <value>Elimina il file codificato dopo la decodifica</value>
  </data>
  <data name="del_original_file_encryption" xml:space="preserve">
    <value>Elimina il file originale dopo la decodifica</value>
  </data>
  <data name="encrypt" xml:space="preserve">
    <value>Codifica</value>
  </data>
  <data name="encrypted_succ" xml:space="preserve">
    <value>File codificato con successo</value>
  </data>
  <data name="encryption" xml:space="preserve">
    <value>Codifica</value>
  </data>
  <data name="enter_pass" xml:space="preserve">
    <value>Inserisci password</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Errore</value>
  </data>
  <data name="extract_to" xml:space="preserve">
    <value>Estrai in</value>
  </data>
  <data name="file_decryption" xml:space="preserve">
    <value>Decodifica file</value>
  </data>
  <data name="file_encrypter_decrypter" xml:space="preserve">
    <value>Codifica e decodifica</value>
  </data>
  <data name="file_encrypter_decrypter_title" xml:space="preserve">
    <value>Codifica e decodifica</value>
  </data>
  <data name="file_open_failed" xml:space="preserve">
    <value>Non è stato possibile aprire il file decodificato.</value>
  </data>
  <data name="HelpUrl" xml:space="preserve">
    <value>http://it.freemium.com/company/faq/</value>
  </data>
  <data name="open_file_decrypt" xml:space="preserve">
    <value>Apri file dopo decodifica riuscita</value>
  </data>
  <data name="original_delete" xml:space="preserve">
    <value>In caso di cancellazione del file originale, non è più possibile accedervi se si è dimenticata la password. Continuare comunque?</value>
  </data>
  <data name="output_exists_message" xml:space="preserve">
    <value>Il file di output "%1" esiste già. Sovrascrivere il file?</value>
  </data>
  <data name="output_exists_title" xml:space="preserve">
    <value>Il file di output esiste già</value>
  </data>
  <data name="pass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="pass_must_match" xml:space="preserve">
    <value>La password e la password confermata devono corrispondere</value>
  </data>
  <data name="path_selection" xml:space="preserve">
    <value>Selezione percorso</value>
  </data>
  <data name="save_to" xml:space="preserve">
    <value>Salva in</value>
  </data>
  <data name="select_destination_first" xml:space="preserve">
    <value>Seleziona prima una destinazione valida</value>
  </data>
  <data name="select_encrypted_file_to_decrypt" xml:space="preserve">
    <value>Seleziona un file codificato che desideri decodificare</value>
  </data>
  <data name="select_file" xml:space="preserve">
    <value>Seleziona file</value>
  </data>
  <data name="select_file_decrypt" xml:space="preserve">
    <value>Seleziona un file codificato che desideri decodificare</value>
  </data>
  <data name="select_file_encrypt" xml:space="preserve">
    <value>Seleziona un file che desideri codificare</value>
  </data>
  <data name="select_file_first" xml:space="preserve">
    <value>Seleziona prima un file</value>
  </data>
  <data name="select_folder_encrypt" xml:space="preserve">
    <value>Seleziona cartella da codificare in</value>
  </data>
  <data name="select_path_decrypt" xml:space="preserve">
    <value>Seleziona percorso per il file decodificato</value>
  </data>
  <data name="split_interrupted" xml:space="preserve">
    <value>Separazione interrotta. Impossibile continuare il processo.</value>
  </data>
  <data name="succ" xml:space="preserve">
    <value>Operazione riuscita</value>
  </data>
  <data name="wrong_pass" xml:space="preserve">
    <value>Password errata</value>
  </data>
</root>