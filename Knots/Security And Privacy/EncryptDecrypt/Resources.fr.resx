<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="auto_encrypt_created" xml:space="preserve">
    <value>Un fichier EXE auto-décrypté a été créé.</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Rechercher</value>
  </data>
  <data name="cannot_be_encrypted" xml:space="preserve">
    <value>Le fichier n’a pas pu être crypté. Veuillez suivre à la lettre les instructions de cryptage.</value>
  </data>
  <data name="cannot_create" xml:space="preserve">
    <value>Le fichier EXE auto-décrypté n’a pas pu être créé.</value>
  </data>
  <data name="cannot_find" xml:space="preserve">
    <value>n’a pas pu être trouvé :</value>
  </data>
  <data name="confirmed_pass" xml:space="preserve">
    <value>Confirmation du mot de passe</value>
  </data>
  <data name="confirm_pass" xml:space="preserve">
    <value>Confirmer le mot de passe</value>
  </data>
  <data name="create_auto_file" xml:space="preserve">
    <value>Créer un fichier EXE auto-décrypté</value>
  </data>
  <data name="decrypt" xml:space="preserve">
    <value>Décrypter</value>
  </data>
  <data name="decrypted_succ" xml:space="preserve">
    <value>Le fichier a été décrypté avec succès.</value>
  </data>
  <data name="decryption" xml:space="preserve">
    <value>Décryptage</value>
  </data>
  <data name="delete_encrypt_decrypt" xml:space="preserve">
    <value>Supprimer le fichier crypté après le décryptage</value>
  </data>
  <data name="del_after_decryption" xml:space="preserve">
    <value>Supprimer le fichier crypté après le décryptage</value>
  </data>
  <data name="del_original_file_encryption" xml:space="preserve">
    <value>Supprimer le fichier d’origine après le cryptage</value>
  </data>
  <data name="encrypt" xml:space="preserve">
    <value>Crypter</value>
  </data>
  <data name="encrypted_succ" xml:space="preserve">
    <value>Le fichier a été crypté avec succès.</value>
  </data>
  <data name="encryption" xml:space="preserve">
    <value>Cryptage</value>
  </data>
  <data name="enter_pass" xml:space="preserve">
    <value>Saisir le mot de passe</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="extract_to" xml:space="preserve">
    <value>Décompresser vers</value>
  </data>
  <data name="file_decryption" xml:space="preserve">
    <value>Décryptage des fichiers</value>
  </data>
  <data name="file_encrypter_decrypter" xml:space="preserve">
    <value>Crypter et décrypter</value>
  </data>
  <data name="file_encrypter_decrypter_title" xml:space="preserve">
    <value>Crypter &amp;et décrypter</value>
  </data>
  <data name="file_open_failed" xml:space="preserve">
    <value>Le fichier décrypté n’a pas pu être ouvert.</value>
  </data>
  <data name="HelpUrl" xml:space="preserve">
    <value>http://fr.freemium.com/company/faq/</value>
  </data>
  <data name="open_file_decrypt" xml:space="preserve">
    <value>Ouvrir le fichier après le décryptage</value>
  </data>
  <data name="original_delete" xml:space="preserve">
    <value>Si le fichier original est supprimé, vous ne pouvez plus y accéder si vous avez oublié votre mot de passe. Souhaitez-vous quand même continuer ?</value>
  </data>
  <data name="output_exists_message" xml:space="preserve">
    <value>Le fichier de sortie « %1 » existe déjà. Souhaitez-vous écraser le fichier ?</value>
  </data>
  <data name="output_exists_title" xml:space="preserve">
    <value>Le fichier de sortie existe déjà.</value>
  </data>
  <data name="pass" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="pass_must_match" xml:space="preserve">
    <value>Le mot de passe et la confirmation du mot de passe doivent être identiques.</value>
  </data>
  <data name="path_selection" xml:space="preserve">
    <value>Sélection du chemin d’accès</value>
  </data>
  <data name="save_to" xml:space="preserve">
    <value>Enregistrer sous</value>
  </data>
  <data name="select_destination_first" xml:space="preserve">
    <value>Sélectionnez tout d’abord au moins une destination valide.</value>
  </data>
  <data name="select_encrypted_file_to_decrypt" xml:space="preserve">
    <value>Sélectionnez un fichier crypté destiné à être décrypté.</value>
  </data>
  <data name="select_file" xml:space="preserve">
    <value>Sélectionner un fichier</value>
  </data>
  <data name="select_file_decrypt" xml:space="preserve">
    <value>Sélectionnez un fichier crypté destiné à être décrypté.</value>
  </data>
  <data name="select_file_encrypt" xml:space="preserve">
    <value>Sélectionnez un fichier à crypter.</value>
  </data>
  <data name="select_file_first" xml:space="preserve">
    <value>Sélectionnez tout d’abord un fichier.</value>
  </data>
  <data name="select_folder_encrypt" xml:space="preserve">
    <value>Sélectionner un dossier dans lequel les fichiers cryptés devront être enregistrés</value>
  </data>
  <data name="select_path_decrypt" xml:space="preserve">
    <value>Chemin d’accès pour le fichier décrypté</value>
  </data>
  <data name="split_interrupted" xml:space="preserve">
    <value>Fractionnement interrompu Le processus ne peut pas être poursuivi.</value>
  </data>
  <data name="succ" xml:space="preserve">
    <value>Opération réussie</value>
  </data>
  <data name="wrong_pass" xml:space="preserve">
    <value>Mot de passe incorrect</value>
  </data>
</root>