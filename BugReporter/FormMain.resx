<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>