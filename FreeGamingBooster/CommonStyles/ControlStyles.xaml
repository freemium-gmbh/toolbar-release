<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Color x:Key="HoverColor">#FF393939</Color>
	<SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
    <SolidColorBrush x:Key="ScanForIssueBackground"
						 Color="#249445"/>
    <Color x:Key="Arrow">#FF425080</Color>
	<Color x:Key="Focus">#FF04CCFF</Color>
	<SolidColorBrush x:Key="btnFocus" Color="{StaticResource Focus}" />
	<Geometry x:Key="DownArrowGeometry">
		M 0 0 L 3 3.5 L 6 0 Z
	</Geometry>
	<Geometry x:Key="Flower">
		M 2,2 L 8,8 M 2,8 L 8,2 M 1,5 L 9,5 M 5,1 L 5,9
	</Geometry>

	<DropShadowEffect x:Key="ButtonMouseOverEffect" BlurRadius="9" Direction="0" RenderingBias="Quality" ShadowDepth="0"
	                  Color="#FFFFFF" />

	<LinearGradientBrush x:Key="PanelSwitcherBorderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Offset="0" Color="#FFAEC3C7" />
		<GradientStop Offset="1" Color="#FFC6E1E7" />
		<GradientStop Offset="0.06" Color="#FFCEE8EC" />
		<GradientStop Offset="0.061" Color="#FFD5EFF4" />
	</LinearGradientBrush>

    <LinearGradientBrush x:Key="ScanForIssueMouseOver"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="#68b98a" />
        <GradientStop Color="#42a96e"
					  Offset="0.752" />
        <GradientStop Color="#42a96e"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScanForIssueBorder"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="#50a96a"
					  Offset="0" />
        <GradientStop Color="#50a96a"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ScanForIssueBorderMouseOver"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="#68b98a"
					  Offset="0" />
        <GradientStop Color="#68b98a"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GreenGradient"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="#01944f"
					  Offset="0" />
        <GradientStop Color="#01944f"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GreenBorderGradient"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="#01944f"
					  Offset="0" />
        <GradientStop Color="#01944f"
					  Offset="1" />
    </LinearGradientBrush>
    
    <Style x:Key="NavigationButton" TargetType="{x:Type Button}">
		<Setter Property="Control.HorizontalContentAlignment" Value="Left" />
		<Setter Property="Control.VerticalContentAlignment" Value="Top" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
									 StartPoint="0.5,0">
                    <GradientStop Color="#515151" />
                    <GradientStop Color="#3d3d3d"
								  Offset="0.752" />
                    <GradientStop Color="#3e3e3e"
								  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1,0,0,0" />
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="Control.Padding" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}"
					        BorderThickness="{TemplateBinding Control.BorderThickness}">
						<Border BorderThickness="1,0,0,0">
							<Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1"
													 StartPoint="0.5,0">
                                    <GradientStop Color="#515151" />
                                    <GradientStop Color="#3d3d3d"
												  Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
							<ContentPresenter Margin="{TemplateBinding Control.Padding}"
							                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}" />
						</Border>
					</Border>					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NavigationButtonSelected" BasedOn="{StaticResource NavigationButton}" TargetType="{x:Type Button}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Color="#23FFFFFF" />
					<GradientStop Offset="0.752" Color="#AEFFFFFF" />
					<GradientStop Offset="1" Color="#E0FFFFFF" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NavigationButtonFirst" BasedOn="{StaticResource NavigationButton}" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="0,0,0,0" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}"
					        BorderThickness="{TemplateBinding Control.BorderThickness}">
						<Border BorderBrush="Transparent" BorderThickness="0,0,0,0">
							<ContentPresenter Margin="{TemplateBinding Control.Padding}"
							                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
										<GradientStop Offset="0.181" Color="#23FFFFFF" />
										<GradientStop Offset="0.522" Color="#AEFFFFFF" />
										<GradientStop Offset="0.711" Color="#E0FFFFFF" />
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NavigationButtonFirstSelected" BasedOn="{StaticResource NavigationButtonFirst}"
	       TargetType="{x:Type Button}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Color="#23FFFFFF" />
					<GradientStop Offset="0.752" Color="#AEFFFFFF" />
					<GradientStop Offset="1" Color="#E0FFFFFF" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScanForIssueButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Width" Value="235" />
		<Setter Property="Height" Value="51" />
		<Setter Property="Control.HorizontalAlignment" Value="Left" />
		<Setter Property="Control.VerticalAlignment" Value="Top" />
		<Setter Property="Control.HorizontalContentAlignment" Value="Left" />
		<Setter Property="Control.VerticalContentAlignment" Value="Top" />
		<Setter Property="Panel.Background" Value="{StaticResource ScanForIssueBackground}" />
        <Setter Property="TextElement.FontFamily" Value="/FreeGamingBooster;component/Fonts/#Ubuntu" />
		<Setter Property="TextElement.FontSize" Value="18" />
        <Setter Property="TextElement.FontWeight" Value="SemiBold" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Border.BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#50a96a" />
                    <GradientStop Offset="1" Color="#50a96a" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Border.BorderThickness" Value="1" />
		<Setter Property="TextElement.Foreground" Value="#FFFFFF" />
		<Setter Property="Control.Padding" Value="36,11,0,0" />
		<Setter Property="FrameworkElement.Margin" Value="0,2,0,0" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect BlurRadius="2" Direction="250" Opacity="0.1" ShadowDepth="1" Color="#629C4B" />
			</Setter.Value>
		</Setter>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Margin="{TemplateBinding FrameworkElement.Margin}" Background="{TemplateBinding Panel.Background}"
					        BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}"
					        CornerRadius="5" Name="Outer">
						<Border Name="Inner" BorderBrush="#50a96a" BorderThickness="0,1,0,0" CornerRadius="5">
							<ContentPresenter Margin="{TemplateBinding Control.Padding}"
							                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							                  TextElement.FontSize="{TemplateBinding TextElement.FontSize}"
							                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}">
								<ContentPresenter.Effect>
									<DropShadowEffect BlurRadius="1" Direction="135" ShadowDepth="1" Color="#5A934E" />
								</ContentPresenter.Effect>
							</ContentPresenter>
						</Border>
					</Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
								 Value="True">
                            <Setter TargetName="Inner"
									Property="Panel.Background"
									Value="{StaticResource ScanForIssueMouseOver}" />
                            <Setter TargetName="Inner"
									Property="Border.BorderBrush"
									Value="{StaticResource ScanForIssueBorderMouseOver}" />
                            <Setter TargetName="Outer"
									Property="Panel.Background"
									Value="{StaticResource ScanForIssueMouseOver}" />
                            <Setter Property="Border.BorderBrush"
				                    Value="{StaticResource ScanForIssueBorderMouseOver}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <Style x:Key="ScanForIssueButtonClickedStyle" TargetType="{x:Type Button}">
		<Setter Property="Width" Value="150" />
		<Setter Property="Height" Value="44" />
		<Setter Property="Padding" Value="22,8,0,0" />
		<Setter Property="Margin" Value="1,5,0,0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Control.HorizontalContentAlignment" Value="Left" />
		<Setter Property="Control.VerticalContentAlignment" Value="Top" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Panel.Background" Value="{StaticResource ScanForIssueBackground}" />
        <Setter Property="TextElement.FontFamily" Value="/FreeGamingBooster;component/Fonts/#Ubuntu" />
        <Setter Property="TextElement.FontSize" Value="18" />
        <Setter Property="TextElement.FontWeight" Value="SemiBold" />
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#50a96a" />
                    <GradientStop Offset="1" Color="#50a96a" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness" Value="2" />
		<Setter Property="TextElement.Foreground" Value="#FFFFFF" />
		<Setter Property="Effect">
			<Setter.Value>
                <DropShadowEffect BlurRadius="2" Direction="250" Opacity=".6" ShadowDepth="1" Color="#629C4B" />
			</Setter.Value>
		</Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Margin="{TemplateBinding FrameworkElement.Margin}" Background="{TemplateBinding Panel.Background}"
					        BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}"
					        CornerRadius="5" Name="Outer">
                        <Border Name="Inner" BorderBrush="#50a96a" BorderThickness="0,1,0,0" CornerRadius="5">
                            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
							                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
							                  TextElement.FontSize="{TemplateBinding TextElement.FontSize}"
							                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}">
                                <ContentPresenter.Effect>
                                    <DropShadowEffect BlurRadius="1" Direction="135" ShadowDepth="1" Color="#5A934E" />
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
								 Value="True">
                            <Setter TargetName="Inner"
									Property="Panel.Background"
									Value="{StaticResource ScanForIssueMouseOver}" />
                            <Setter TargetName="Inner"
									Property="Border.BorderBrush"
									Value="{StaticResource ScanForIssueBorderMouseOver}" />
                            <Setter TargetName="Outer"
									Property="Panel.Background"
									Value="{StaticResource ScanForIssueMouseOver}" />
                            <Setter Property="Border.BorderBrush"
				                    Value="{StaticResource ScanForIssueBorderMouseOver}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CheckBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border ClipToBounds="False">
						<Border.Background>

							<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
								<GradientStop Offset="0" Color="#FFF4F4F6" />
								<GradientStop Offset="1" Color="#FFFFFF" />
							</LinearGradientBrush>

						</Border.Background>
						<Rectangle Margin="15,5,5,0" ClipToBounds="False" StrokeDashArray="1 2" StrokeThickness="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#FDFDFD" />
				<GradientStop Offset="1.0" Color="#F4F5F6" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#FFF" />
				<GradientStop Offset="1.0" Color="#CCC" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#FFF" />
				<GradientStop Offset="1.0" Color="#EEE" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#FFF" />
				<GradientStop Offset="1.0" Color="#EEE" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#BBB" />
				<GradientStop Offset="0.1" Color="#EEE" />
				<GradientStop Offset="0.9" Color="#EEE" />
				<GradientStop Offset="1.0" Color="#FFF" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

	<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

	<LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#262626" />
				<GradientStop Offset="1.0" Color="#262626" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#CCC" />
				<GradientStop Offset="1.0" Color="#444" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#777" />
				<GradientStop Offset="1.0" Color="#000" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.0" Color="#444" />
				<GradientStop Offset="1.0" Color="#888" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

	<SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

	<SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

	<LinearGradientBrush x:Key="GlyphBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
                <GradientStop Offset="0.0" Color="#50a96a" />
                <GradientStop Offset="1.0" Color="#249445" />
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

	<Style x:Key="OneCLickCheckBoxBase" TargetType="CheckBox">
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<!--
			<Setter Property="FocusVisualStyle"
			Value="{StaticResource CheckBoxFocusVisual}" />
		-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<BulletDecorator VerticalAlignment="Top" Background="Transparent" ClipToBounds="False">
						<BulletDecorator.Bullet>
							<Grid Width="20" Height="20" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
							      Background="Transparent">
                                <Border x:Name="Border" Width="16" Height="16" Background="#000000"
								        BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1" CornerRadius="3">
									<Border.Effect>
										<DropShadowEffect BlurRadius="1" Direction="-90" RenderingBias="Quality" ShadowDepth="0.5" Color="#D3DCDE" />
									</Border.Effect>
								</Border>
								<Path x:Name="CheckMark" Width="13.374" Height="6.385" Margin="7,4,0,0" HorizontalAlignment="Left"
								      VerticalAlignment="Top" Panel.ZIndex="5"
								      Data="M2.820453,0 L2.9631661,3.3574099 13.374389,3.3574099 13.374389,6.3854101 0.059389591,6.3854101 0.059389591,3.3574099 0.13761698,3.3574099 0,0.11988854 z"
								      RenderTransformOrigin="0.746,0.428" Stretch="Fill" StrokeThickness="0">
									<Path.Effect>
										<DropShadowEffect BlurRadius="1" Direction="39" RenderingBias="Quality" ShadowDepth="0.5" Color="#FF90C3D1" />
									</Path.Effect>
									<Path.Fill>
										<LinearGradientBrush MappingMode="Absolute" StartPoint="9,0" EndPoint="1,8">
                                            <GradientStop Offset="1" Color="#249445" />
                                            <GradientStop Color="#249440" />
										</LinearGradientBrush>
									</Path.Fill>
									<Path.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform Angle="-44.826" />
											<TranslateTransform X="-2.461" Y="-1.678" />
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" RecognizesAccessKey="True" />
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Panel.Effect" Value="{DynamicResource ButtonMouseOverEffect}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OneClickCheckBox" BasedOn="{StaticResource OneCLickCheckBoxBase}" TargetType="{x:Type CheckBox}" />

	<Style x:Key="OneClickCheckBoxWrap" TargetType="{x:Type Grid}">
		<Setter Property="Width" Value="368" />
		<Setter Property="Height" Value="64" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<Style x:Key="OneClickCheckBoxInner" TargetType="{x:Type Grid}">
		<Setter Property="Height" Value="45" />
		<Setter Property="Margin" Value="0,7,0,0" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>

	<Style x:Key="OneClickCheckBoxDetails" TargetType="{x:Type Grid}">
		<Setter Property="Margin" Value="79,26,0,0" />
		<Setter Property="Panel.ZIndex" Value="10" />
	</Style>

	<Style x:Key="CheckBoxContentTitle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="Foreground" Value="#FFFFFF" />
		<Setter Property="Margin" Value="0,0,0,1" />		
	</Style>

	<Style x:Key="CheckBoxContentText" TargetType="{x:Type TextBlock}">
		<Setter Property="Margin" Value="0,0,20,0" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="11.65" />
		<Setter Property="LineHeight" Value="15" />
		<Setter Property="Height" Value="25" />
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		<Setter Property="Foreground" Value="#FF808080" />
	</Style>

	<Style x:Key="CheckBoxAutomatedScan" TargetType="CheckBox">
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<BulletDecorator VerticalAlignment="Top" Background="Transparent" ClipToBounds="False">
						<BulletDecorator.Bullet>
							<Grid Width="20" Height="20" Margin="0,4,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
							      Background="Transparent">
								<Border x:Name="Border" Width="16" Height="16" Background="#000000"
								        BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1" CornerRadius="3">									
								</Border>
								<Path x:Name="CheckMark" Width="13.374" Height="6.385" Margin="7,4,0,0" HorizontalAlignment="Left"
								      VerticalAlignment="Top" Panel.ZIndex="5"
								      Data="M2.820453,0 L2.9631661,3.3574099 13.374389,3.3574099 13.374389,6.3854101 0.059389591,6.3854101 0.059389591,3.3574099 0.13761698,3.3574099 0,0.11988854 z"
								      RenderTransformOrigin="0.746,0.428" Stretch="Fill" StrokeThickness="0">
									<Path.Effect>
										<DropShadowEffect BlurRadius="1" Direction="39" RenderingBias="Quality" ShadowDepth="0.5" Color="#FF90C3D1" />
									</Path.Effect>
									<Path.Fill>
										<LinearGradientBrush MappingMode="Absolute" StartPoint="9,0" EndPoint="1,8">
                                            <GradientStop Offset="1" Color="#249445" />
                                            <GradientStop Color="#249440" />
										</LinearGradientBrush>
									</Path.Fill>
									<Path.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform Angle="-44.826" />
											<TranslateTransform X="-2.461" Y="-1.678" />
										</TransformGroup>
									</Path.RenderTransform>
								</Path>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" RecognizesAccessKey="True" />
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Panel.Effect" Value="{DynamicResource ButtonMouseOverEffect}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CheckBoxAutomatedScanText" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="11.74" />
		<Setter Property="LineHeight" Value="15" />
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		<Setter Property="Foreground" Value="#FF808080" />
	</Style>

	<Style x:Key="CheckBoxAutomatedScanTextBold" BasedOn="{StaticResource CheckBoxAutomatedScanText}"
	       TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 75" />
		<Setter Property="FontWeight" Value="Bold" />
	</Style>

	<Style x:Key="OptionsLink" TargetType="{x:Type Button}">
		<Setter Property="Margin" Value="17,10,0,0" />
        <Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 55" />
		<Setter Property="FontSize" Value="11.75" />
		<Setter Property="Foreground" Value="#FFFFFF" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<StackPanel x:Name="panel" Width="{TemplateBinding Width}" Height="{TemplateBinding Width}">
						<ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="panel" Property="Background" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="ContentTemplate">
								<Setter.Value>
									<DataTemplate>
										<TextBlock Text="{TemplateBinding Content}" TextDecorations="Underline" />
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="False">
							<Setter Property="ContentTemplate">
								<Setter.Value>
									<DataTemplate>
										<TextBlock Text="{TemplateBinding Content}" />
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect BlurRadius="1" Direction="-90" ShadowDepth="1" Color="#FFFFFF" />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TransparentButton" TargetType="{x:Type Button}">
		<Setter Property="Margin" Value="17,10,0,0" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="11.75" />
        <Setter Property="Foreground" Value="#FFFFFF" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel x:Name="panel"
									Width="{TemplateBinding Width}"
									Height="{TemplateBinding Width}">
                        <ContentPresenter Width="{TemplateBinding Width}"
											  Height="{TemplateBinding Width}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
									 Value="True">
                            <Setter TargetName="panel"
										Property="Panel.Effect"
										Value="{DynamicResource ButtonMouseOverEffect}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
									 Value="False">
                        </Trigger>
                        <Trigger Property="IsPressed"
									 Value="true">
                            <Setter TargetName="panel"
										Property="Background"
										Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
									 Value="true">
                            <Setter Property="Background"
										Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed"
									 Value="True">
                            <Setter Property="RenderTransform"
										Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButtonSimple" TargetType="{x:Type Button}">
		<Setter Property="Margin" Value="17,10,0,0" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="11.75" />
		<Setter Property="Foreground" Value="#009BB8" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<StackPanel x:Name="panel" Width="{TemplateBinding Width}" Height="{TemplateBinding Width}">
						<ContentPresenter Width="{TemplateBinding Width}" Height="{TemplateBinding Width}" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True" />
						<Trigger Property="UIElement.IsMouseOver" Value="False" />
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="panel" Property="Background" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScanResult" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="11.75" />		
	</Style>

	<Style x:Key="ScanFinishedError" BasedOn="{StaticResource ScanResult}" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#C71500" />
	</Style>

	<Style x:Key="ScanFinishedOK" BasedOn="{StaticResource ScanResult}" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#1D772C" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 75" />
		<Setter Property="FontWeight" Value="Bold" />
	</Style>

	<Style x:Key="RadioButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeDashArray="1 2" StrokeThickness="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="TextElement.Foreground" Value="#808080" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="TextElement.FontSize" Value="11.74" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="14" Height="14">
                                <Ellipse x:Name="Border" Fill="#000000" Stroke="#2a2a2a"
								         StrokeThickness="1" />
								<Ellipse x:Name="CheckMark" Margin="4" Fill="{StaticResource GlyphBrush}" />
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" RecognizesAccessKey="True" />
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Panel.Effect" Value="{DynamicResource ButtonMouseOverEffect}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBrush}" />
							<Setter TargetName="Border" Property="Stroke" Value="{StaticResource GlyphBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="Stroke" Value="#40000000" />
							<Setter Property="Foreground" Value="#80000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PostResults" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 75" />
		<Setter Property="FontSize" Value="16.8" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="#FFFFFF" />
		<Setter Property="Margin" Value="0,0,0,10" />		
	</Style>

    <Style x:Key="SocialButton" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Control.HorizontalAlignment" Value="Left" />
        <Setter Property="Control.VerticalAlignment" Value="Top" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Top" />
        <Setter Property="TextElement.FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
        <Setter Property="TextElement.FontSize" Value="11.7" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Border.BorderThickness" Value="1" />
    </Style>

    <Style x:Key="FacebookButton" BasedOn="{StaticResource SocialButton}" TargetType="{x:Type Button}">

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Margin="{TemplateBinding FrameworkElement.Margin}" Background="{TemplateBinding Panel.Background}"
						BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}"
						CornerRadius="2">
                        <Border BorderThickness="1,1,1,1" CornerRadius="2">
                            <Border>
                                <ContentPresenter Margin="{TemplateBinding Control.Padding}"
											  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
											  TextElement.FontSize="{TemplateBinding TextElement.FontSize}"
											  >

                                </ContentPresenter>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFECEEF5"/>
        <Setter Property="BorderBrush" Value="#FFCAD4E7"/>
        <Setter Property="Foreground" Value="#FF39599C"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Content" Value="Button"/>
        <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10,2.5,0,0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStretch" Value="Normal"/>
        <Setter Property="FontStyle" Value="Normal"/>
    </Style>
    <Style x:Key="TwitterButton" BasedOn="{StaticResource SocialButton}" TargetType="{x:Type Button}">

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Margin="{TemplateBinding FrameworkElement.Margin}" Background="{TemplateBinding Panel.Background}"
						BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="0"
						CornerRadius="2">
                        <Border BorderThickness="1,1,1,1" BorderBrush="#CCCCCC" CornerRadius="2">
                            <Border>

                                <ContentPresenter Margin="{TemplateBinding Control.Padding}"
											  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
											  TextElement.FontSize="{TemplateBinding TextElement.FontSize}"
											  TextElement.Foreground="#343434">

                                </ContentPresenter>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/FreeGamingBooster;component/Images/tw_bg.png" Stretch="Fill" TileMode="Tile"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="Foreground" Value="#FF343434"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="10.667"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <Style x:Key="GooglePlusButton" BasedOn="{StaticResource SocialButton}" TargetType="{x:Type Button}">
        <Setter Property="Border.BorderBrush" Value="#343434" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Margin="{TemplateBinding FrameworkElement.Margin}" Background="{TemplateBinding Panel.Background}"
						BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="0"
						CornerRadius="2">
                        <Border BorderThickness="0,0,0,0" CornerRadius="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="1" Color="Transparent" />
                                    <GradientStop Color="Transparent" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border BorderThickness="0,0,0,0">
                                <Border.Background>
                                    <!--<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<GradientStop Offset="1" Color="#ffffff" />
									<GradientStop Color="#ffffff"  />
								</LinearGradientBrush>-->
                                    <ImageBrush ImageSource="..\Images\google.png" TileMode="FlipX" Stretch="None" />
                                </Border.Background>
                                <ContentPresenter Margin="{TemplateBinding Control.Padding}"
											  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
											  TextElement.FontSize="{TemplateBinding TextElement.FontSize}"
											  TextElement.Foreground="{TemplateBinding TextElement.Foreground}">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect BlurRadius="0" Direction="-90" Opacity="0.3" ShadowDepth="1" Color="#000000" />
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="32"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="OpacityMask" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>


    <Style x:Key="ButtonPath" TargetType="{x:Type Path}">
		<Setter Property="FrameworkElement.Margin" Value="4" />
		<Setter Property="Shape.Stroke" Value="#FF7C919E" />
		<Setter Property="Shape.StrokeThickness" Value="2" />
		<Setter Property="Shape.StrokeStartLineCap" Value="Round" />
		<Setter Property="Shape.StrokeEndLineCap" Value="Round" />
		<Setter Property="Shape.Stretch" Value="Uniform" />
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
		<Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
	</Style>

	<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="Control.HorizontalContentAlignment" Value="Left" />
		<Setter Property="Control.VerticalContentAlignment"
		        Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Control.Padding" Value="3,2,3,2" />
		<Setter Property="Panel.Background" Value="#00FFFFFF" />
		<Setter Property="FrameworkElement.Margin" Value="1" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Margin="{TemplateBinding FrameworkElement.Margin}" Background="{TemplateBinding Panel.Background}"
					        BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3" Padding="{TemplateBinding Control.Padding}"
					        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
							<Setter Property="Panel.Background" Value="#E2F0F3" />
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DownArrowButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
		<Setter Property="UIElement.Focusable" Value="False" />
		<Setter Property="ButtonBase.ClickMode" Value="Press" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Background="{TemplateBinding Panel.Background}">
						<Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" HorizontalAlignment="Right"
						      SnapsToDevicePixels="True">
							<Path Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
							      Data="{StaticResource DownArrowGeometry}" Fill="{TemplateBinding TextElement.Foreground}" />
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  x:Key="{x:Type ComboBox}"  -->
    <Style x:Key="ComboboxStyle"
		   TargetType="{x:Type ComboBox}">
        <Setter Property="TextElement.Foreground"
				Value="#111111" />
        <Setter Property="Panel.Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
									 StartPoint="0.5,0">
                    <GradientStop Color="#515151"
								  Offset="0" />
                    <GradientStop Color="#3d3d3d"
								  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush"
				Value="Black" />
        <Setter Property="Border.BorderThickness"
				Value="1.2" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
        <Setter Property="FrameworkElement.Margin"
				Value="3,5" />
        <Setter Property="FrameworkElement.Height"
				Value="18" />
        <Setter Property="Control.HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="Control.VerticalContentAlignment"
				Value="Center" />
        <Setter Property="FrameworkElement.VerticalAlignment"
				Value="Center" />
        <Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border Height="{TemplateBinding FrameworkElement.Height}"
							BorderBrush="{TemplateBinding Border.BorderBrush}"
							BorderThickness="{TemplateBinding Border.BorderThickness}"
							Background="{TemplateBinding Panel.Background}"
							CornerRadius="8">
                        <Grid Name="MainGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
												  Width="0" />
                            </Grid.ColumnDefinitions>
                            <Popup Name="PART_Popup"
								   AllowsTransparency="True"
								   Grid.ColumnSpan="2"
								   Placement="Bottom"
								   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
								   IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
                                <!--<theme:SystemDropShadowChrome Name="Shdw"
															  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
															  MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}">-->
                                <Border Name="DropDownBorder"
										BorderThickness="1"
										BorderBrush="#000000"
										CornerRadius="5"
										Margin="0,2,0,0"
										Background="#3d3d3d">
                                    <ScrollViewer CanContentScroll="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
														SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                                <!--</theme:SystemDropShadowChrome>-->
                            </Popup>
                            <Grid IsHitTestVisible="False"
								  Margin="4,0,-2,0"
								  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
								  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
								  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                                <Path Name="_pathFlower"
									  StrokeEndLineCap="Round"
									  StrokeStartLineCap="Round"
									  StrokeThickness="2"
									  Stroke="{TemplateBinding TextElement.Foreground}"
									  Data="{StaticResource Flower}"
									  StrokeDashCap="Round" />
                                <Path Name="_pathDot"
									  Margin="0,1,0,0"
									  StrokeEndLineCap="Round"
									  StrokeStartLineCap="Round"
									  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
									  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
									  StrokeThickness="3"
									  Stroke="#515151"
									  Data="M0 0L0 0"
									  StrokeDashCap="Round" />
                            </Grid>
                            <ToggleButton Name="tb2"
										  Grid.ColumnSpan="2"
										  Background="#00FFFFFF"
										  Style="{StaticResource DownArrowButton}"
										  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
								 Value="True">
                            <Setter Value="{DynamicResource MouseOverColor}"
									Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
								 Property="Popup.HasDropShadow"
								 Value="True">
                            <!--<Setter TargetName="Shdw"
									Property="FrameworkElement.Margin"
									Value="0,0,5,5" />-->
                            <!--<Setter TargetName="Shdw"
									Property="theme:SystemDropShadowChrome.Color"	
									Value="#71000000" />-->
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems"
								 Value="False">
                            <Setter TargetName="DropDownBorder"
									Property="FrameworkElement.Height"
									Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
								 Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
									Property="TextElement.Foreground" />
                            <Setter Property="Panel.Background"
									Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping"
								 Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
									Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnStyle" TargetType="{x:Type Button}">
		<Setter Property="Panel.Background" Value="#FFFFFFFF" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Margin="{TemplateBinding Control.Padding}" Column="1">
                        <Border Name="_outerCircle" Width="32" Height="32" Background="#000000" BorderBrush="#000000"
						        BorderThickness="0,.5,1,.5" CornerRadius="18" Padding="3">
                            <Border Name="_innerCircle" Background="#414141" BorderBrush="#414141" BorderThickness="1,.5,0,.5"
							        CornerRadius="15" />
						</Border>
						<Grid Name="arrow" Width="7" Height="7" Margin="3, 3, 0, 0" HorizontalAlignment="Center"
						      VerticalAlignment="Center" SnapsToDevicePixels="False">
							<Path Margin="0.049,0.632,0.876,0.371"
							      Data="M0,0 L6,0 6,0.0038637304 6.0039029,0.0038637304 6.0039029,5.856864 4.5039029,5.856864 4.5039029,1.5 0,1.5 z"
							      Fill="#000000" RenderTransformOrigin="0.499674968749744,0.128054874835055" Stretch="Fill" Stroke="#414141"
							      StrokeThickness="0">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform Angle="45" />
										<TranslateTransform />
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<Path
Data="M4.4632387,2.4744823 L5.4632387,2.4744823 5.4632387,6.8594822 4.4632387,6.8594822 z M0,0 L0.99988145,0 0.99988145,0.010012683 6.9289999,0.010012683 6.9289999,1.0100127 0.99988145,1.0100127 0.99988145,2.5 0,2.5 z"
Fill="#000000" RenderTransformOrigin="0.567088420193289,0.0743514928626114" Stretch="Fill" Stroke="#000000"
StrokeThickness="0">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform Angle="45" />
										<TranslateTransform />
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="FunctionalButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Panel.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#0d0d0d" />
                    <GradientStop Offset="1" Color="#0d0d0d" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Border.BorderBrush" Value="Black" />
		<Setter Property="Border.BorderThickness" Value="0,0,0,.6" />
		<Setter Property="TextElement.Foreground" Value="#FF4682B4" />
		<Setter Property="Control.HorizontalContentAlignment" Value="Left" />
		<Setter Property="Control.VerticalContentAlignment" Value="Top" />
		<Setter Property="FrameworkElement.Width" Value="340" />
		<Setter Property="FrameworkElement.Height" Value="80" />
		<Setter Property="Control.Padding" Value="0" />
		<Setter Property="Control.Margin" Value="10,0,10,0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Name="outerBorder" CornerRadius="7">
						<Border Name="brdr" Background="{TemplateBinding Panel.Background}"
						        BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}"
						        CornerRadius="5">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<ContentPresenter Margin="{TemplateBinding Control.Padding}"
								                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
								                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True"
								                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
								                  TextElement.Foreground="{TemplateBinding TextElement.Foreground}" />
								<Button Name="btn" Grid.Column="1" Margin="0,0,14,0" FocusVisualStyle="{x:Null}" RenderTransformOrigin=".5 .5"
								        Style="{StaticResource btnStyle}">
									<Button.RenderTransform>
										<RotateTransform Angle="{Binding ElementName=This, Path=Angle}" />
									</Button.RenderTransform>
								</Button>
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="outerBorder" Property="Panel.Effect" Value="{DynamicResource ButtonMouseOverEffect}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="FunctionalButtonContent" TargetType="{x:Type Grid}">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Margin" Value="0,11,0,0" />
	</Style>

	<Style x:Key="FunctionalButtonImage" TargetType="{x:Type Image}">
		<Setter Property="Margin" Value="-7,-20,0,0" />
		<Setter Property="Stretch" Value="None" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="SnapsToDevicePixels" Value="True" />        
    </Style> 

	<Style x:Key="FunctionalButtonTitle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 55" />
		<Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#FFFFFF" />
		<Setter Property="Margin" Value="0,0,0,1" />
	</Style>

	<Style x:Key="FunctionalButtonText" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 55" />
		<Setter Property="FontSize" Value="11.75" />
		<Setter Property="LineHeight" Value="15" />
		<Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
		<Setter Property="Foreground" Value="#FF808080" />
	</Style>

	<Style x:Key="LongButtonPath" TargetType="{x:Type Path}">
		<Setter Property="Data"
		        Value="M0.012425974,0 L6.0124259,0 6.0124259,2 2,2 2,6.0279822 0,6.0279822 0,0.027982222 0.012425974,0.027982222 z" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Height" Value="6.5" />
		<Setter Property="Margin" Value="0,7,4,0" />
		<Setter Property="Stretch" Value="Fill" />
		<Setter Property="StrokeThickness" Value="0" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Width" Value="6.012" />
		<Setter Property="RenderTransformOrigin" Value="0.501033355204289,0.165892990560131" />
		<Setter Property="Fill" Value="#FFB1BFC6" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TransformGroup>
					<RotateTransform Angle="45" />
				</TransformGroup>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="LongButtonText" TargetType="{x:Type TextBlock}">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue LT Std" />
		<Setter Property="FontSize" Value="11.889" />
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="Foreground" Value="#FF97A9B3" />
	</Style>

	<Style x:Key="LongButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="TextElement.Foreground" Value="#FFADAFB0" />
		<Setter Property="Border.BorderBrush" Value="#FFC0C0C0" />
		<Setter Property="Border.BorderThickness" Value="0,0,0,.6" />
		<Setter Property="Control.Height" Value="30" />
		<Setter Property="Control.Margin" Value="10,6,10,6" />
		<Setter Property="Padding" Value="245,7,0,0" />
		<Setter Property="ClipToBounds" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Panel.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Offset="0" Color="White" />
					<GradientStop Offset="1" Color="#FFF7FCFC" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Name="outerBorder" CornerRadius="7">
						<Border Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}"
						        BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="5">
							<StackPanel Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Left" VerticalAlignment="Top"
							            Orientation="Horizontal">
								<Path Style="{StaticResource LongButtonPath}" />
								<TextBlock Style="{StaticResource LongButtonText}">
									<ContentPresenter Name="_cp" />
								</TextBlock>
							</StackPanel>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter TargetName="outerBorder" Property="Panel.Effect" Value="{DynamicResource ButtonMouseOverEffect}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type ListBox}" TargetType="ListBox">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Panel.Background" Value="{x:Null}" />
		<Setter Property="Border.BorderBrush" Value="{x:Null}" />
		<Setter Property="Border.BorderThickness" Value="0" />
	</Style>

	<Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
		<Setter Property="Focusable" Value="False" />
	</Style>

	<Style x:Key="ProgressBarOuther" TargetType="{x:Type Border}">
		<Setter Property="Width" Value="475" />
		<Setter Property="Height" Value="22" />
		<Setter Property="Margin" Value="0,11,0,0" />
		<Setter Property="CornerRadius" Value="2" />
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
	</Style>

	<Style x:Key="ProgressBarWrap" TargetType="{x:Type Border}">
		<Setter Property="Width" Value="475" />
		<Setter Property="Height" Value="21" />
		<Setter Property="CornerRadius" Value="2" />
		<Setter Property="Background" Value="#000000" />
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="BorderThickness" Value="1,2,1,0" />
		<Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#000000" />
            </Setter.Value>
        </Setter>
	</Style>

	<Style x:Key="ProgressBarGreen" TargetType="{x:Type Border}">
		<Setter Property="Height" Value="11" />
		<Setter Property="CornerRadius" Value="2" />
		<Setter Property="ClipToBounds" Value="True" />
		<Setter Property="Margin" Value="4,3,0,0" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Offset="0" Color="#FF63A544" />
					<GradientStop Offset="1" Color="#FF548B51" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="1" Color="#249445" />
                    <GradientStop Color="#20893e" />
                </LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ProgressBarInner" TargetType="{x:Type Border}">
		<Setter Property="ClipToBounds" Value="True" />
		<Setter Property="Margin" Value="-20,0,0,0" />
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush MappingMode="Absolute" Opacity=".04" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="1,1">
					<LinearGradientBrush.Transform>
						<ScaleTransform ScaleX="10" ScaleY="10" />
					</LinearGradientBrush.Transform>
					<GradientStop Offset="0" Color="#FFFFFF" />
					<GradientStop Offset="0.5" Color="#FFFFFF" />
					<GradientStop Offset="0.5" Color="#000000" />
					<GradientStop Offset="1" Color="#000000" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ProgressBarInnerAnimated" BasedOn="{StaticResource ProgressBarInner}" TargetType="{x:Type Border}">
		<Style.Triggers>
			<Trigger Property="Border.Visibility" Value="Visible">
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="ProgressBarAnimation">
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.28" From="0" RepeatBehavior="Forever"
							                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="20" />
							<!--
								<DoubleAnimation Storyboard.TargetProperty="Opacity"
								From="1"
								To="0"
								AutoReverse="True"
								Duration="00:00:0.8"
								RepeatBehavior="Forever" />
							-->
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<RemoveStoryboard BeginStoryboardName="ProgressBarAnimation" />
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="ProgressBarRed" BasedOn="{StaticResource ProgressBarGreen}" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Offset="0" Color="#B8191B" />
					<GradientStop Offset="1" Color="#AD1B15" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Offset="1" Color="#B8191B" />
					<GradientStop Color="#EF6046" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScanStatusTitle" TargetType="{x:Type TextBlock}">
		<Setter Property="Padding" Value="6,2,0,0" />
		<Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 75" />
        <Setter Property="Foreground" Value="#4E4E4E" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="ClipToBounds" Value="True" />		
	</Style>

	<Style x:Key="ScanStatus" TargetType="{x:Type TextBlock}">
		<Setter Property="Padding" Value="6,3,0,0" />
        <Setter Property="FontFamily" Value="/FreeGamingBooster;component/Fonts/#Helvetica Neue CE 55" />
        <Setter Property="Foreground" Value="#4E4E4E" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="ClipToBounds" Value="True" />		
	</Style>
</ResourceDictionary>