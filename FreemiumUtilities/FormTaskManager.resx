<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nZxOAAAAAElFTkSuQmCC
</value>
  </data>
</root>